type TokenId = nat;
type StreamingStrategy = variant {
                           Callback:
                            record {
                              callback: StreamingCallback;
                              token: StreamingCallbackToken;
                            };};
type StreamingCallbackToken = 
 record {
   content_encoding: text;
   index: nat;
   key: text;
 };
type StreamingCallbackResponse = 
 record {
   body: blob;
   token: opt StreamingCallbackToken;
 };
type StreamingCallback = func (StreamingCallbackToken) ->
                          (StreamingCallbackResponse) query;
type Result = 
 variant {
   err: text;
   ok;
 };
type Response = 
 record {
   body: blob;
   headers: vec HeaderField;
   status_code: nat16;
   streaming_strategy: opt StreamingStrategy;
 };
type Request = 
 record {
   body: blob;
   headers: vec HeaderField;
   method: text;
   url: text;
 };
type HeaderField = 
 record {
   text;
   text;
 };
type Graduate = 
 record {
   date: text;
   desc1: text;
   desc2: text;
   name: text;
   preference: nat;
   status: text;
   track: text;
   username: text;
 };
type DRC721 = 
 service {
   addAdmin: (principal) -> (Result);
   admin_update_uri: (nat, Graduate) -> (text);
   approve: (principal, TokenId) -> ();
   balanceOf: (principal) -> (opt nat);
   getApproved: (nat) -> (principal);
   getRegistry: () -> (vec record {
                             TokenId;
                             principal;
                           }) query;
   get_diploma: (principal) -> (opt Graduate);
   http_request: (Request) -> (Response) query;
   isApprovedForAll: (principal, principal) -> (bool);
   mint: (principal, Graduate) -> (nat);
   name: () -> (text) query;
   ownerOf: (TokenId) -> (opt principal);
   setApprovalForAll: (principal, bool) -> () oneway;
   set_svg_template: (text) -> () oneway;
   symbol: () -> (text) query;
   tokenURI: (TokenId) -> (opt text) query;
   transferFrom: (principal, principal, nat) -> () oneway;
   update_uri: (nat, text, nat) -> (text);
 };
service : (text, text) -> DRC721
